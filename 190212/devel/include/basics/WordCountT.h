// Generated by gencpp from file basics/WordCountT.msg
// DO NOT EDIT!


#ifndef BASICS_MESSAGE_WORDCOUNTT_H
#define BASICS_MESSAGE_WORDCOUNTT_H

#include <ros/service_traits.h>


#include <basics/WordCountTRequest.h>
#include <basics/WordCountTResponse.h>


namespace basics
{

struct WordCountT
{

typedef WordCountTRequest Request;
typedef WordCountTResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct WordCountT
} // namespace basics


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::basics::WordCountT > {
  static const char* value()
  {
    return "58903d21a3264f3408d79ba79e9f7c7e";
  }

  static const char* value(const ::basics::WordCountT&) { return value(); }
};

template<>
struct DataType< ::basics::WordCountT > {
  static const char* value()
  {
    return "basics/WordCountT";
  }

  static const char* value(const ::basics::WordCountT&) { return value(); }
};


// service_traits::MD5Sum< ::basics::WordCountTRequest> should match 
// service_traits::MD5Sum< ::basics::WordCountT > 
template<>
struct MD5Sum< ::basics::WordCountTRequest>
{
  static const char* value()
  {
    return MD5Sum< ::basics::WordCountT >::value();
  }
  static const char* value(const ::basics::WordCountTRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::basics::WordCountTRequest> should match 
// service_traits::DataType< ::basics::WordCountT > 
template<>
struct DataType< ::basics::WordCountTRequest>
{
  static const char* value()
  {
    return DataType< ::basics::WordCountT >::value();
  }
  static const char* value(const ::basics::WordCountTRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::basics::WordCountTResponse> should match 
// service_traits::MD5Sum< ::basics::WordCountT > 
template<>
struct MD5Sum< ::basics::WordCountTResponse>
{
  static const char* value()
  {
    return MD5Sum< ::basics::WordCountT >::value();
  }
  static const char* value(const ::basics::WordCountTResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::basics::WordCountTResponse> should match 
// service_traits::DataType< ::basics::WordCountT > 
template<>
struct DataType< ::basics::WordCountTResponse>
{
  static const char* value()
  {
    return DataType< ::basics::WordCountT >::value();
  }
  static const char* value(const ::basics::WordCountTResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BASICS_MESSAGE_WORDCOUNTT_H
